{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { ExpandedLTR, SlideInOut } from 'ng-material-multilevel-menu';\nimport { RepositoriesOrderModalComponent } from 'src/app/shared/repositories-order-modal/repositories-order-modal.component';\nlet NavigationComponent = class NavigationComponent {\n  constructor(router, dialog) {\n    this.router = router;\n    this.dialog = dialog;\n    this.menutoggle = new EventEmitter();\n    this.mousetoggle = new EventEmitter();\n    this.isMenuClosed = false;\n    this.isExpanded = true;\n    this.isShowing = false;\n    this.showSubmenu = false;\n    this.showSubSubMenu = false;\n    this.name = 'Angular';\n    this.appitems = [{\n      label: 'Quick Access',\n      faIcon: 'icon-quick-access',\n      class: 'level-1',\n      items: [{\n        label: 'Dashboard',\n        link: '/quick-access/dashboard',\n        faIcon: 'icon-dashboard'\n      }, {\n        label: 'Recent',\n        link: '/quick-access/recent',\n        faIcon: 'icon-recent',\n        badge: '11'\n      }, {\n        label: 'My Favorites',\n        link: '/quick-access/my-favorites',\n        faIcon: 'icon-my-favourites',\n        badge: '13'\n      }, {\n        label: 'Shared',\n        link: '/quick-access/shared',\n        faIcon: 'icon-shared'\n      }, {\n        label: 'Trash',\n        link: '/quick-access/trash',\n        faIcon: 'icon-trash',\n        badge: '3'\n      }]\n    }, {\n      label: 'Repositories',\n      class: 'level-1 repositories-main-nav',\n      faIcon: 'icon-repository',\n      repoMainIcon: 'settings',\n      repoMainclass: 'repo-setting-icon',\n      items: [{\n        label: 'Repository 1',\n        link: '/repository',\n        faIcon: 'icon-repository',\n        repoIcon: 'visibility_off',\n        repoclass: 'visibility-off'\n      }, {\n        label: 'Repository 2',\n        link: '/repository2',\n        faIcon: 'icon-repository',\n        repoIcon: 'visibility'\n      }, {\n        label: 'Repository 3',\n        link: '/repository3',\n        faIcon: 'icon-repository',\n        repoIcon: 'visibility'\n      }]\n    }, {\n      label: 'Manage Repositories',\n      class: 'level-1',\n      faIcon: 'icon-manage-repository',\n      items: [{\n        label: 'Repositories',\n        link: '/repo-admin',\n        faIcon: 'icon-manage-repository'\n      }]\n    }, {\n      label: 'Administration',\n      class: 'level-1',\n      faIcon: 'icon-manage-repository',\n      items: [{\n        label: 'Repositories',\n        link: '/tenant-repo-admin',\n        faIcon: 'icon-manage-repository'\n      }, {\n        label: 'Metadata Templates',\n        link: '/tenant-repo-admin/metadata-templates',\n        faIcon: 'icon-metadata-templates'\n      }, {\n        label: 'Users',\n        faIcon: 'icon-group '\n      }, {\n        label: 'Roles & Privileges',\n        faIcon: 'icon-role '\n      }, {\n        label: 'Company Info',\n        link: '/tenant-repo-admin/company-info',\n        faIcon: 'icon-info '\n      }, {\n        label: 'Reports',\n        faIcon: 'icon-reports'\n      }, {\n        label: 'Lookups',\n        faIcon: 'icon-lookups '\n      }, {\n        label: 'Settings',\n        link: '/tenant-repo-admin/settings',\n        faIcon: 'icon-settings '\n      }]\n    },\n    /***Below items should  be removed */\n    {\n      label: 'Components (Dev Reference)',\n      class: 'level-1',\n      faIcon: 'icon-template',\n      tooltip: 'Components (Dev Reference)',\n      items: [{\n        label: 'Messages ',\n        link: '/components/messages',\n        faIcon: 'icon-template'\n      }, {\n        label: 'List View',\n        link: '/components/list-view',\n        faIcon: 'icon-template'\n      }, {\n        label: 'Card View',\n        link: '/components/card-view',\n        faIcon: 'icon-template'\n      }, {\n        label: 'Form Entry',\n        link: '/components/form-entry',\n        faIcon: 'icon-template'\n      }, {\n        label: 'Breadcrumb',\n        link: '/components/breadcrumb',\n        faIcon: 'icon-template'\n      }, {\n        label: 'Page Title',\n        link: '/components/page-title',\n        faIcon: 'icon-template'\n      }, {\n        label: 'Empty Message',\n        link: '/components/empty-message',\n        faIcon: 'icon-template'\n      }, {\n        label: 'Modal Dialogs',\n        link: '/components/modal-dialogs',\n        faIcon: 'icon-template'\n      }]\n    },\n    /***above will be removed */\n    {\n      label: '',\n      faIcon: '',\n      class: 'left-nav-devider'\n    }, {\n      label: 'Notifications',\n      faIcon: 'icon-notification',\n      class: 'level-1 responsive-menu'\n    }, {\n      label: 'Help',\n      faIcon: 'icon-help',\n      class: 'level-1 responsive-menu'\n    }, {\n      label: '',\n      faIcon: '',\n      class: 'left-nav-devider'\n    }, {\n      label: 'SP',\n      // faIcon: 'icon-person' show a icon when user doesn't upload an photo,\n      faIcon: 'icon-profile-photo',\n      class: 'level-1 responsive-menu',\n      items: [{\n        label: 'Edit Profile',\n        link: '../my-profile/my-profile',\n        faIcon: 'icon-edit',\n        class: 'responsive-menu'\n      }, {\n        label: 'Change Password',\n        link: '../my-profile/change-password',\n        faIcon: 'icon-change-password',\n        class: 'responsive-menu'\n      }, {\n        label: 'Sign Out',\n        link: '/login',\n        faIcon: 'icon-logout',\n        class: 'responsive-menu'\n      }]\n    }];\n    this.config = {\n      paddingAtStart: false,\n      interfaceWithRoute: true,\n      classname: 'app-sidemenu',\n      useDividers: false,\n      highlightOnSelect: true,\n      collapseOnSelect: false,\n      rtlLayout: false,\n      customTemplate: true\n    };\n  }\n\n  mouseenter() {\n    if (this.isMenuClosed) {\n      this.isShowing = true;\n      this.mousetoggle.emit();\n    }\n  }\n\n  mouseleave() {\n    if (this.isMenuClosed) {\n      this.isShowing = false;\n      this.mousetoggle.emit();\n    }\n  }\n\n  closeNavmenu() {\n    this.isMenuClosed = this.isMenuClosed ? false : true;\n    this.menutoggle.emit();\n  }\n\n  getClass(item) {\n    return {\n      [item.faIcon]: true\n    };\n  }\n\n  openRepositoriesOrderDialog() {\n    const dialogRef = this.dialog.open(RepositoriesOrderModalComponent, {\n      panelClass: 'drag-list-dialog'\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n\n  ngOnInit() {\n    const url = this.router.url;\n\n    if (url === '/') {}\n  }\n\n};\n\n__decorate([Output()], NavigationComponent.prototype, \"menutoggle\", void 0);\n\n__decorate([Output()], NavigationComponent.prototype, \"mousetoggle\", void 0);\n\n__decorate([ViewChild('sidenav')], NavigationComponent.prototype, \"sidenav\", void 0);\n\nNavigationComponent = __decorate([Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  animations: [SlideInOut, ExpandedLTR]\n})], NavigationComponent);\nexport { NavigationComponent };","map":null,"metadata":{},"sourceType":"module"}