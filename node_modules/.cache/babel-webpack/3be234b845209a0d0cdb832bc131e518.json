{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { RelatedFilesModalComponent } from './related-files-modal/related-files-modal.component';\nconst ELEMENT_DATA = [{\n  position: 1,\n  checkbox: '',\n  name: 'file1.xls',\n  repository: ' Repository 1',\n  folder: 'Folder 1',\n  view: ''\n}, {\n  position: 2,\n  checkbox: '',\n  name: 'file2.PDF',\n  repository: ' Repository 2',\n  folder: 'Folder 2',\n  view: ''\n}, {\n  position: 3,\n  checkbox: '',\n  name: 'file3.xls',\n  repository: ' Repository 3',\n  folder: 'Folder 3',\n  view: ''\n}, {\n  position: 4,\n  checkbox: '',\n  name: 'file4.doc',\n  repository: ' Repository 4',\n  folder: 'Folder 4',\n  view: ''\n}];\nlet RelatedFilesComponent = class RelatedFilesComponent {\n  constructor(_liveAnnouncer, dialog) {\n    this._liveAnnouncer = _liveAnnouncer;\n    this.dialog = dialog;\n    this.displayedColumns = ['checkbox', 'name', 'repository', 'folder', 'view'];\n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    this.selection = new SelectionModel(true, []);\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  /** The label for the checkbox on the passed row */\n\n\n  checkboxLabel(row) {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnInit() {}\n\n  announceSortChange(sortState) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  addRelatedFiles() {\n    const dialogRef = this.dialog.open(RelatedFilesModalComponent, {\n      panelClass: 'full-screen-dialog'\n    });\n  }\n\n};\n\n__decorate([ViewChild(MatSort)], RelatedFilesComponent.prototype, \"sort\", void 0);\n\nRelatedFilesComponent = __decorate([Component({\n  selector: 'app-related-files',\n  templateUrl: './related-files.component.html',\n  styleUrls: ['./related-files.component.scss']\n})], RelatedFilesComponent);\nexport { RelatedFilesComponent };","map":null,"metadata":{},"sourceType":"module"}